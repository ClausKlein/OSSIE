// This file is generated by omniidl (C++ backend)- omniORB_4_1. Do not edit.
#ifndef __FM__Control_hh__
#define __FM__Control_hh__

#ifndef __CORBA_H_EXTERNAL_GUARD__
#include <omniORB4/CORBA.h>
#endif

#ifndef  USE_stub_in_nt_dll
# define USE_stub_in_nt_dll_NOT_DEFINED_FM__Control
#endif
#ifndef  USE_core_stub_in_nt_dll
# define USE_core_stub_in_nt_dll_NOT_DEFINED_FM__Control
#endif
#ifndef  USE_dyn_stub_in_nt_dll
# define USE_dyn_stub_in_nt_dll_NOT_DEFINED_FM__Control
#endif






#ifdef USE_stub_in_nt_dll
# ifndef USE_core_stub_in_nt_dll
#  define USE_core_stub_in_nt_dll
# endif
# ifndef USE_dyn_stub_in_nt_dll
#  define USE_dyn_stub_in_nt_dll
# endif
#endif

#ifdef _core_attr
# error "A local CPP macro _core_attr has already been defined."
#else
# ifdef  USE_core_stub_in_nt_dll
#  define _core_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _core_attr
# endif
#endif

#ifdef _dyn_attr
# error "A local CPP macro _dyn_attr has already been defined."
#else
# ifdef  USE_dyn_stub_in_nt_dll
#  define _dyn_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _dyn_attr
# endif
#endif





_CORBA_MODULE standardInterfaces

_CORBA_MODULE_BEG

#ifndef __standardInterfaces_mFM__ModControl__
#define __standardInterfaces_mFM__ModControl__

  class FM_ModControl;
  class _objref_FM_ModControl;
  class _impl_FM_ModControl;
  
  typedef _objref_FM_ModControl* FM_ModControl_ptr;
  typedef FM_ModControl_ptr FM_ModControlRef;

  class FM_ModControl_Helper {
  public:
    typedef FM_ModControl_ptr _ptr_type;

    static _ptr_type _nil();
    static _CORBA_Boolean is_nil(_ptr_type);
    static void release(_ptr_type);
    static void duplicate(_ptr_type);
    static void marshalObjRef(_ptr_type, cdrStream&);
    static _ptr_type unmarshalObjRef(cdrStream&);
  };

  typedef _CORBA_ObjRef_Var<_objref_FM_ModControl, FM_ModControl_Helper> FM_ModControl_var;
  typedef _CORBA_ObjRef_OUT_arg<_objref_FM_ModControl,FM_ModControl_Helper > FM_ModControl_out;

#endif

  // interface FM_ModControl
  class FM_ModControl {
  public:
    // Declarations for this interface type.
    typedef FM_ModControl_ptr _ptr_type;
    typedef FM_ModControl_var _var_type;

    static _ptr_type _duplicate(_ptr_type);
    static _ptr_type _narrow(::CORBA::Object_ptr);
    static _ptr_type _unchecked_narrow(::CORBA::Object_ptr);
    
    static _ptr_type _nil();

    static inline void _marshalObjRef(_ptr_type, cdrStream&);

    static inline _ptr_type _unmarshalObjRef(cdrStream& s) {
      omniObjRef* o = omniObjRef::_unMarshal(_PD_repoId,s);
      if (o)
        return (_ptr_type) o->_ptrToObjRef(_PD_repoId);
      else
        return _nil();
    }

    static _core_attr const char* _PD_repoId;

    // Other IDL defined within this scope.
    
  };

  class _objref_FM_ModControl :
    public virtual ::CORBA::Object,
    public virtual omniObjRef
  {
  public:
    

    inline _objref_FM_ModControl()  { _PR_setobj(0); }  // nil
    _objref_FM_ModControl(omniIOR*, omniIdentity*);

  protected:
    virtual ~_objref_FM_ModControl();

    
  private:
    virtual void* _ptrToObjRef(const char*);

    _objref_FM_ModControl(const _objref_FM_ModControl&);
    _objref_FM_ModControl& operator = (const _objref_FM_ModControl&);
    // not implemented

    friend class FM_ModControl;
  };

  class _pof_FM_ModControl : public _OMNI_NS(proxyObjectFactory) {
  public:
    inline _pof_FM_ModControl() : _OMNI_NS(proxyObjectFactory)(FM_ModControl::_PD_repoId) {}
    virtual ~_pof_FM_ModControl();

    virtual omniObjRef* newObjRef(omniIOR*,omniIdentity*);
    virtual _CORBA_Boolean is_a(const char*) const;
  };

  class _impl_FM_ModControl :
    public virtual omniServant
  {
  public:
    virtual ~_impl_FM_ModControl();

    
    
  public:  // Really protected, workaround for xlC
    virtual _CORBA_Boolean _dispatch(omniCallHandle&);

  private:
    virtual void* _ptrToInterface(const char*);
    virtual const char* _mostDerivedRepoId();
    
  };


  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_FM_ModControl;

#ifndef __standardInterfaces_mFM__DemodControl__
#define __standardInterfaces_mFM__DemodControl__

  class FM_DemodControl;
  class _objref_FM_DemodControl;
  class _impl_FM_DemodControl;
  
  typedef _objref_FM_DemodControl* FM_DemodControl_ptr;
  typedef FM_DemodControl_ptr FM_DemodControlRef;

  class FM_DemodControl_Helper {
  public:
    typedef FM_DemodControl_ptr _ptr_type;

    static _ptr_type _nil();
    static _CORBA_Boolean is_nil(_ptr_type);
    static void release(_ptr_type);
    static void duplicate(_ptr_type);
    static void marshalObjRef(_ptr_type, cdrStream&);
    static _ptr_type unmarshalObjRef(cdrStream&);
  };

  typedef _CORBA_ObjRef_Var<_objref_FM_DemodControl, FM_DemodControl_Helper> FM_DemodControl_var;
  typedef _CORBA_ObjRef_OUT_arg<_objref_FM_DemodControl,FM_DemodControl_Helper > FM_DemodControl_out;

#endif

  // interface FM_DemodControl
  class FM_DemodControl {
  public:
    // Declarations for this interface type.
    typedef FM_DemodControl_ptr _ptr_type;
    typedef FM_DemodControl_var _var_type;

    static _ptr_type _duplicate(_ptr_type);
    static _ptr_type _narrow(::CORBA::Object_ptr);
    static _ptr_type _unchecked_narrow(::CORBA::Object_ptr);
    
    static _ptr_type _nil();

    static inline void _marshalObjRef(_ptr_type, cdrStream&);

    static inline _ptr_type _unmarshalObjRef(cdrStream& s) {
      omniObjRef* o = omniObjRef::_unMarshal(_PD_repoId,s);
      if (o)
        return (_ptr_type) o->_ptrToObjRef(_PD_repoId);
      else
        return _nil();
    }

    static _core_attr const char* _PD_repoId;

    // Other IDL defined within this scope.
    
  };

  class _objref_FM_DemodControl :
    public virtual ::CORBA::Object,
    public virtual omniObjRef
  {
  public:
    

    inline _objref_FM_DemodControl()  { _PR_setobj(0); }  // nil
    _objref_FM_DemodControl(omniIOR*, omniIdentity*);

  protected:
    virtual ~_objref_FM_DemodControl();

    
  private:
    virtual void* _ptrToObjRef(const char*);

    _objref_FM_DemodControl(const _objref_FM_DemodControl&);
    _objref_FM_DemodControl& operator = (const _objref_FM_DemodControl&);
    // not implemented

    friend class FM_DemodControl;
  };

  class _pof_FM_DemodControl : public _OMNI_NS(proxyObjectFactory) {
  public:
    inline _pof_FM_DemodControl() : _OMNI_NS(proxyObjectFactory)(FM_DemodControl::_PD_repoId) {}
    virtual ~_pof_FM_DemodControl();

    virtual omniObjRef* newObjRef(omniIOR*,omniIdentity*);
    virtual _CORBA_Boolean is_a(const char*) const;
  };

  class _impl_FM_DemodControl :
    public virtual omniServant
  {
  public:
    virtual ~_impl_FM_DemodControl();

    
    
  public:  // Really protected, workaround for xlC
    virtual _CORBA_Boolean _dispatch(omniCallHandle&);

  private:
    virtual void* _ptrToInterface(const char*);
    virtual const char* _mostDerivedRepoId();
    
  };


  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_FM_DemodControl;

#ifndef __standardInterfaces_mFM__DemodStatus__
#define __standardInterfaces_mFM__DemodStatus__

  class FM_DemodStatus;
  class _objref_FM_DemodStatus;
  class _impl_FM_DemodStatus;
  
  typedef _objref_FM_DemodStatus* FM_DemodStatus_ptr;
  typedef FM_DemodStatus_ptr FM_DemodStatusRef;

  class FM_DemodStatus_Helper {
  public:
    typedef FM_DemodStatus_ptr _ptr_type;

    static _ptr_type _nil();
    static _CORBA_Boolean is_nil(_ptr_type);
    static void release(_ptr_type);
    static void duplicate(_ptr_type);
    static void marshalObjRef(_ptr_type, cdrStream&);
    static _ptr_type unmarshalObjRef(cdrStream&);
  };

  typedef _CORBA_ObjRef_Var<_objref_FM_DemodStatus, FM_DemodStatus_Helper> FM_DemodStatus_var;
  typedef _CORBA_ObjRef_OUT_arg<_objref_FM_DemodStatus,FM_DemodStatus_Helper > FM_DemodStatus_out;

#endif

  // interface FM_DemodStatus
  class FM_DemodStatus {
  public:
    // Declarations for this interface type.
    typedef FM_DemodStatus_ptr _ptr_type;
    typedef FM_DemodStatus_var _var_type;

    static _ptr_type _duplicate(_ptr_type);
    static _ptr_type _narrow(::CORBA::Object_ptr);
    static _ptr_type _unchecked_narrow(::CORBA::Object_ptr);
    
    static _ptr_type _nil();

    static inline void _marshalObjRef(_ptr_type, cdrStream&);

    static inline _ptr_type _unmarshalObjRef(cdrStream& s) {
      omniObjRef* o = omniObjRef::_unMarshal(_PD_repoId,s);
      if (o)
        return (_ptr_type) o->_ptrToObjRef(_PD_repoId);
      else
        return _nil();
    }

    static _core_attr const char* _PD_repoId;

    // Other IDL defined within this scope.
    
  };

  class _objref_FM_DemodStatus :
    public virtual ::CORBA::Object,
    public virtual omniObjRef
  {
  public:
    

    inline _objref_FM_DemodStatus()  { _PR_setobj(0); }  // nil
    _objref_FM_DemodStatus(omniIOR*, omniIdentity*);

  protected:
    virtual ~_objref_FM_DemodStatus();

    
  private:
    virtual void* _ptrToObjRef(const char*);

    _objref_FM_DemodStatus(const _objref_FM_DemodStatus&);
    _objref_FM_DemodStatus& operator = (const _objref_FM_DemodStatus&);
    // not implemented

    friend class FM_DemodStatus;
  };

  class _pof_FM_DemodStatus : public _OMNI_NS(proxyObjectFactory) {
  public:
    inline _pof_FM_DemodStatus() : _OMNI_NS(proxyObjectFactory)(FM_DemodStatus::_PD_repoId) {}
    virtual ~_pof_FM_DemodStatus();

    virtual omniObjRef* newObjRef(omniIOR*,omniIdentity*);
    virtual _CORBA_Boolean is_a(const char*) const;
  };

  class _impl_FM_DemodStatus :
    public virtual omniServant
  {
  public:
    virtual ~_impl_FM_DemodStatus();

    
    
  public:  // Really protected, workaround for xlC
    virtual _CORBA_Boolean _dispatch(omniCallHandle&);

  private:
    virtual void* _ptrToInterface(const char*);
    virtual const char* _mostDerivedRepoId();
    
  };


  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_FM_DemodStatus;

_CORBA_MODULE_END



_CORBA_MODULE POA_standardInterfaces
_CORBA_MODULE_BEG

  class FM_ModControl :
    public virtual standardInterfaces::_impl_FM_ModControl,
    public virtual ::PortableServer::ServantBase
  {
  public:
    virtual ~FM_ModControl();

    inline ::standardInterfaces::FM_ModControl_ptr _this() {
      return (::standardInterfaces::FM_ModControl_ptr) _do_this(::standardInterfaces::FM_ModControl::_PD_repoId);
    }
  };

  class FM_DemodControl :
    public virtual standardInterfaces::_impl_FM_DemodControl,
    public virtual ::PortableServer::ServantBase
  {
  public:
    virtual ~FM_DemodControl();

    inline ::standardInterfaces::FM_DemodControl_ptr _this() {
      return (::standardInterfaces::FM_DemodControl_ptr) _do_this(::standardInterfaces::FM_DemodControl::_PD_repoId);
    }
  };

  class FM_DemodStatus :
    public virtual standardInterfaces::_impl_FM_DemodStatus,
    public virtual ::PortableServer::ServantBase
  {
  public:
    virtual ~FM_DemodStatus();

    inline ::standardInterfaces::FM_DemodStatus_ptr _this() {
      return (::standardInterfaces::FM_DemodStatus_ptr) _do_this(::standardInterfaces::FM_DemodStatus::_PD_repoId);
    }
  };

_CORBA_MODULE_END



_CORBA_MODULE OBV_standardInterfaces
_CORBA_MODULE_BEG

_CORBA_MODULE_END





#undef _core_attr
#undef _dyn_attr

void operator<<=(::CORBA::Any& _a, standardInterfaces::FM_ModControl_ptr _s);
void operator<<=(::CORBA::Any& _a, standardInterfaces::FM_ModControl_ptr* _s);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, standardInterfaces::FM_ModControl_ptr& _s);

void operator<<=(::CORBA::Any& _a, standardInterfaces::FM_DemodControl_ptr _s);
void operator<<=(::CORBA::Any& _a, standardInterfaces::FM_DemodControl_ptr* _s);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, standardInterfaces::FM_DemodControl_ptr& _s);

void operator<<=(::CORBA::Any& _a, standardInterfaces::FM_DemodStatus_ptr _s);
void operator<<=(::CORBA::Any& _a, standardInterfaces::FM_DemodStatus_ptr* _s);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, standardInterfaces::FM_DemodStatus_ptr& _s);



inline void
standardInterfaces::FM_ModControl::_marshalObjRef(::standardInterfaces::FM_ModControl_ptr obj, cdrStream& s) {
  omniObjRef::_marshal(obj->_PR_getobj(),s);
}


inline void
standardInterfaces::FM_DemodControl::_marshalObjRef(::standardInterfaces::FM_DemodControl_ptr obj, cdrStream& s) {
  omniObjRef::_marshal(obj->_PR_getobj(),s);
}


inline void
standardInterfaces::FM_DemodStatus::_marshalObjRef(::standardInterfaces::FM_DemodStatus_ptr obj, cdrStream& s) {
  omniObjRef::_marshal(obj->_PR_getobj(),s);
}




#ifdef   USE_stub_in_nt_dll_NOT_DEFINED_FM__Control
# undef  USE_stub_in_nt_dll
# undef  USE_stub_in_nt_dll_NOT_DEFINED_FM__Control
#endif
#ifdef   USE_core_stub_in_nt_dll_NOT_DEFINED_FM__Control
# undef  USE_core_stub_in_nt_dll
# undef  USE_core_stub_in_nt_dll_NOT_DEFINED_FM__Control
#endif
#ifdef   USE_dyn_stub_in_nt_dll_NOT_DEFINED_FM__Control
# undef  USE_dyn_stub_in_nt_dll
# undef  USE_dyn_stub_in_nt_dll_NOT_DEFINED_FM__Control
#endif

#endif  // __FM__Control_hh__

