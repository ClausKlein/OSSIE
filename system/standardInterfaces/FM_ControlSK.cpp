// This file is generated by omniidl (C++ backend)- omniORB_4_1. Do not edit.

#include "FM_Control.h"
#include <omniORB4/IOP_S.h>
#include <omniORB4/IOP_C.h>
#include <omniORB4/callDescriptor.h>
#include <omniORB4/callHandle.h>
#include <omniORB4/objTracker.h>


OMNI_USING_NAMESPACE(omni)

static const char* _0RL_library_version = omniORB_4_1;



standardInterfaces::FM_ModControl_ptr standardInterfaces::FM_ModControl_Helper::_nil() {
  return ::standardInterfaces::FM_ModControl::_nil();
}

::CORBA::Boolean standardInterfaces::FM_ModControl_Helper::is_nil(::standardInterfaces::FM_ModControl_ptr p) {
  return ::CORBA::is_nil(p);

}

void standardInterfaces::FM_ModControl_Helper::release(::standardInterfaces::FM_ModControl_ptr p) {
  ::CORBA::release(p);
}

void standardInterfaces::FM_ModControl_Helper::marshalObjRef(::standardInterfaces::FM_ModControl_ptr obj, cdrStream& s) {
  ::standardInterfaces::FM_ModControl::_marshalObjRef(obj, s);
}

standardInterfaces::FM_ModControl_ptr standardInterfaces::FM_ModControl_Helper::unmarshalObjRef(cdrStream& s) {
  return ::standardInterfaces::FM_ModControl::_unmarshalObjRef(s);
}

void standardInterfaces::FM_ModControl_Helper::duplicate(::standardInterfaces::FM_ModControl_ptr obj) {
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
}

standardInterfaces::FM_ModControl_ptr
standardInterfaces::FM_ModControl::_duplicate(::standardInterfaces::FM_ModControl_ptr obj)
{
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
  return obj;
}

standardInterfaces::FM_ModControl_ptr
standardInterfaces::FM_ModControl::_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


standardInterfaces::FM_ModControl_ptr
standardInterfaces::FM_ModControl::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

standardInterfaces::FM_ModControl_ptr
standardInterfaces::FM_ModControl::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_FM_ModControl _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_FM_ModControl* _the_nil_ptr = 0;
  if( !_the_nil_ptr ) {
    omni::nilRefLock().lock();
    if( !_the_nil_ptr ) {
      _the_nil_ptr = new _objref_FM_ModControl;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* standardInterfaces::FM_ModControl::_PD_repoId = "IDL:standardInterfaces/FM_ModControl:1.0";


standardInterfaces::_objref_FM_ModControl::~_objref_FM_ModControl() {
  
}


standardInterfaces::_objref_FM_ModControl::_objref_FM_ModControl(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::standardInterfaces::FM_ModControl::_PD_repoId, ior, id, 1)
   
   
{
  _PR_setobj(this);
}

void*
standardInterfaces::_objref_FM_ModControl::_ptrToObjRef(const char* id)
{
  if( id == ::standardInterfaces::FM_ModControl::_PD_repoId )
    return (::standardInterfaces::FM_ModControl_ptr) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (::CORBA::Object_ptr) this;

  if( omni::strMatch(id, ::standardInterfaces::FM_ModControl::_PD_repoId) )
    return (::standardInterfaces::FM_ModControl_ptr) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (::CORBA::Object_ptr) this;

  return 0;
}

standardInterfaces::_pof_FM_ModControl::~_pof_FM_ModControl() {}


omniObjRef*
standardInterfaces::_pof_FM_ModControl::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::standardInterfaces::_objref_FM_ModControl(ior, id);
}


::CORBA::Boolean
standardInterfaces::_pof_FM_ModControl::is_a(const char* id) const
{
  if( omni::ptrStrMatch(id, ::standardInterfaces::FM_ModControl::_PD_repoId) )
    return 1;
  
  return 0;
}

const standardInterfaces::_pof_FM_ModControl _the_pof_standardInterfaces_mFM__ModControl;

standardInterfaces::_impl_FM_ModControl::~_impl_FM_ModControl() {}


::CORBA::Boolean
standardInterfaces::_impl_FM_ModControl::_dispatch(omniCallHandle& _handle)
{
  

  
  return 0;
}

void*
standardInterfaces::_impl_FM_ModControl::_ptrToInterface(const char* id)
{
  if( id == ::standardInterfaces::FM_ModControl::_PD_repoId )
    return (::standardInterfaces::_impl_FM_ModControl*) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (void*) 1;

  if( omni::strMatch(id, ::standardInterfaces::FM_ModControl::_PD_repoId) )
    return (::standardInterfaces::_impl_FM_ModControl*) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (void*) 1;
  return 0;
}

const char*
standardInterfaces::_impl_FM_ModControl::_mostDerivedRepoId()
{
  return ::standardInterfaces::FM_ModControl::_PD_repoId;
}

standardInterfaces::FM_DemodControl_ptr standardInterfaces::FM_DemodControl_Helper::_nil() {
  return ::standardInterfaces::FM_DemodControl::_nil();
}

::CORBA::Boolean standardInterfaces::FM_DemodControl_Helper::is_nil(::standardInterfaces::FM_DemodControl_ptr p) {
  return ::CORBA::is_nil(p);

}

void standardInterfaces::FM_DemodControl_Helper::release(::standardInterfaces::FM_DemodControl_ptr p) {
  ::CORBA::release(p);
}

void standardInterfaces::FM_DemodControl_Helper::marshalObjRef(::standardInterfaces::FM_DemodControl_ptr obj, cdrStream& s) {
  ::standardInterfaces::FM_DemodControl::_marshalObjRef(obj, s);
}

standardInterfaces::FM_DemodControl_ptr standardInterfaces::FM_DemodControl_Helper::unmarshalObjRef(cdrStream& s) {
  return ::standardInterfaces::FM_DemodControl::_unmarshalObjRef(s);
}

void standardInterfaces::FM_DemodControl_Helper::duplicate(::standardInterfaces::FM_DemodControl_ptr obj) {
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
}

standardInterfaces::FM_DemodControl_ptr
standardInterfaces::FM_DemodControl::_duplicate(::standardInterfaces::FM_DemodControl_ptr obj)
{
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
  return obj;
}

standardInterfaces::FM_DemodControl_ptr
standardInterfaces::FM_DemodControl::_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


standardInterfaces::FM_DemodControl_ptr
standardInterfaces::FM_DemodControl::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

standardInterfaces::FM_DemodControl_ptr
standardInterfaces::FM_DemodControl::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_FM_DemodControl _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_FM_DemodControl* _the_nil_ptr = 0;
  if( !_the_nil_ptr ) {
    omni::nilRefLock().lock();
    if( !_the_nil_ptr ) {
      _the_nil_ptr = new _objref_FM_DemodControl;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* standardInterfaces::FM_DemodControl::_PD_repoId = "IDL:standardInterfaces/FM_DemodControl:1.0";


standardInterfaces::_objref_FM_DemodControl::~_objref_FM_DemodControl() {
  
}


standardInterfaces::_objref_FM_DemodControl::_objref_FM_DemodControl(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::standardInterfaces::FM_DemodControl::_PD_repoId, ior, id, 1)
   
   
{
  _PR_setobj(this);
}

void*
standardInterfaces::_objref_FM_DemodControl::_ptrToObjRef(const char* id)
{
  if( id == ::standardInterfaces::FM_DemodControl::_PD_repoId )
    return (::standardInterfaces::FM_DemodControl_ptr) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (::CORBA::Object_ptr) this;

  if( omni::strMatch(id, ::standardInterfaces::FM_DemodControl::_PD_repoId) )
    return (::standardInterfaces::FM_DemodControl_ptr) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (::CORBA::Object_ptr) this;

  return 0;
}

standardInterfaces::_pof_FM_DemodControl::~_pof_FM_DemodControl() {}


omniObjRef*
standardInterfaces::_pof_FM_DemodControl::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::standardInterfaces::_objref_FM_DemodControl(ior, id);
}


::CORBA::Boolean
standardInterfaces::_pof_FM_DemodControl::is_a(const char* id) const
{
  if( omni::ptrStrMatch(id, ::standardInterfaces::FM_DemodControl::_PD_repoId) )
    return 1;
  
  return 0;
}

const standardInterfaces::_pof_FM_DemodControl _the_pof_standardInterfaces_mFM__DemodControl;

standardInterfaces::_impl_FM_DemodControl::~_impl_FM_DemodControl() {}


::CORBA::Boolean
standardInterfaces::_impl_FM_DemodControl::_dispatch(omniCallHandle& _handle)
{
  

  
  return 0;
}

void*
standardInterfaces::_impl_FM_DemodControl::_ptrToInterface(const char* id)
{
  if( id == ::standardInterfaces::FM_DemodControl::_PD_repoId )
    return (::standardInterfaces::_impl_FM_DemodControl*) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (void*) 1;

  if( omni::strMatch(id, ::standardInterfaces::FM_DemodControl::_PD_repoId) )
    return (::standardInterfaces::_impl_FM_DemodControl*) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (void*) 1;
  return 0;
}

const char*
standardInterfaces::_impl_FM_DemodControl::_mostDerivedRepoId()
{
  return ::standardInterfaces::FM_DemodControl::_PD_repoId;
}

standardInterfaces::FM_DemodStatus_ptr standardInterfaces::FM_DemodStatus_Helper::_nil() {
  return ::standardInterfaces::FM_DemodStatus::_nil();
}

::CORBA::Boolean standardInterfaces::FM_DemodStatus_Helper::is_nil(::standardInterfaces::FM_DemodStatus_ptr p) {
  return ::CORBA::is_nil(p);

}

void standardInterfaces::FM_DemodStatus_Helper::release(::standardInterfaces::FM_DemodStatus_ptr p) {
  ::CORBA::release(p);
}

void standardInterfaces::FM_DemodStatus_Helper::marshalObjRef(::standardInterfaces::FM_DemodStatus_ptr obj, cdrStream& s) {
  ::standardInterfaces::FM_DemodStatus::_marshalObjRef(obj, s);
}

standardInterfaces::FM_DemodStatus_ptr standardInterfaces::FM_DemodStatus_Helper::unmarshalObjRef(cdrStream& s) {
  return ::standardInterfaces::FM_DemodStatus::_unmarshalObjRef(s);
}

void standardInterfaces::FM_DemodStatus_Helper::duplicate(::standardInterfaces::FM_DemodStatus_ptr obj) {
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
}

standardInterfaces::FM_DemodStatus_ptr
standardInterfaces::FM_DemodStatus::_duplicate(::standardInterfaces::FM_DemodStatus_ptr obj)
{
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
  return obj;
}

standardInterfaces::FM_DemodStatus_ptr
standardInterfaces::FM_DemodStatus::_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


standardInterfaces::FM_DemodStatus_ptr
standardInterfaces::FM_DemodStatus::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

standardInterfaces::FM_DemodStatus_ptr
standardInterfaces::FM_DemodStatus::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_FM_DemodStatus _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_FM_DemodStatus* _the_nil_ptr = 0;
  if( !_the_nil_ptr ) {
    omni::nilRefLock().lock();
    if( !_the_nil_ptr ) {
      _the_nil_ptr = new _objref_FM_DemodStatus;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* standardInterfaces::FM_DemodStatus::_PD_repoId = "IDL:standardInterfaces/FM_DemodStatus:1.0";


standardInterfaces::_objref_FM_DemodStatus::~_objref_FM_DemodStatus() {
  
}


standardInterfaces::_objref_FM_DemodStatus::_objref_FM_DemodStatus(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::standardInterfaces::FM_DemodStatus::_PD_repoId, ior, id, 1)
   
   
{
  _PR_setobj(this);
}

void*
standardInterfaces::_objref_FM_DemodStatus::_ptrToObjRef(const char* id)
{
  if( id == ::standardInterfaces::FM_DemodStatus::_PD_repoId )
    return (::standardInterfaces::FM_DemodStatus_ptr) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (::CORBA::Object_ptr) this;

  if( omni::strMatch(id, ::standardInterfaces::FM_DemodStatus::_PD_repoId) )
    return (::standardInterfaces::FM_DemodStatus_ptr) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (::CORBA::Object_ptr) this;

  return 0;
}

standardInterfaces::_pof_FM_DemodStatus::~_pof_FM_DemodStatus() {}


omniObjRef*
standardInterfaces::_pof_FM_DemodStatus::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::standardInterfaces::_objref_FM_DemodStatus(ior, id);
}


::CORBA::Boolean
standardInterfaces::_pof_FM_DemodStatus::is_a(const char* id) const
{
  if( omni::ptrStrMatch(id, ::standardInterfaces::FM_DemodStatus::_PD_repoId) )
    return 1;
  
  return 0;
}

const standardInterfaces::_pof_FM_DemodStatus _the_pof_standardInterfaces_mFM__DemodStatus;

standardInterfaces::_impl_FM_DemodStatus::~_impl_FM_DemodStatus() {}


::CORBA::Boolean
standardInterfaces::_impl_FM_DemodStatus::_dispatch(omniCallHandle& _handle)
{
  

  
  return 0;
}

void*
standardInterfaces::_impl_FM_DemodStatus::_ptrToInterface(const char* id)
{
  if( id == ::standardInterfaces::FM_DemodStatus::_PD_repoId )
    return (::standardInterfaces::_impl_FM_DemodStatus*) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (void*) 1;

  if( omni::strMatch(id, ::standardInterfaces::FM_DemodStatus::_PD_repoId) )
    return (::standardInterfaces::_impl_FM_DemodStatus*) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (void*) 1;
  return 0;
}

const char*
standardInterfaces::_impl_FM_DemodStatus::_mostDerivedRepoId()
{
  return ::standardInterfaces::FM_DemodStatus::_PD_repoId;
}

POA_standardInterfaces::FM_ModControl::~FM_ModControl() {}

POA_standardInterfaces::FM_DemodControl::~FM_DemodControl() {}

POA_standardInterfaces::FM_DemodStatus::~FM_DemodStatus() {}

