// This file is generated by omniidl (C++ backend) - omniORB_4_1. Do not edit.

#include "FM_Control.h"

OMNI_USING_NAMESPACE(omni)

static const char* _0RL_dyn_library_version = omniORB_4_1_dyn;

static ::CORBA::TypeCode::_Tracker _0RL_tcTrack(__FILE__);

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace standardInterfaces { 
  const ::CORBA::TypeCode_ptr _tc_FM_ModControl = CORBA::TypeCode::PR_interface_tc("IDL:standardInterfaces/FM_ModControl:1.0", "FM_ModControl", &_0RL_tcTrack);
} 
#else
const ::CORBA::TypeCode_ptr standardInterfaces::_tc_FM_ModControl = CORBA::TypeCode::PR_interface_tc("IDL:standardInterfaces/FM_ModControl:1.0", "FM_ModControl", &_0RL_tcTrack);
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace standardInterfaces { 
  const ::CORBA::TypeCode_ptr _tc_FM_DemodControl = CORBA::TypeCode::PR_interface_tc("IDL:standardInterfaces/FM_DemodControl:1.0", "FM_DemodControl", &_0RL_tcTrack);
} 
#else
const ::CORBA::TypeCode_ptr standardInterfaces::_tc_FM_DemodControl = CORBA::TypeCode::PR_interface_tc("IDL:standardInterfaces/FM_DemodControl:1.0", "FM_DemodControl", &_0RL_tcTrack);
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace standardInterfaces { 
  const ::CORBA::TypeCode_ptr _tc_FM_DemodStatus = CORBA::TypeCode::PR_interface_tc("IDL:standardInterfaces/FM_DemodStatus:1.0", "FM_DemodStatus", &_0RL_tcTrack);
} 
#else
const ::CORBA::TypeCode_ptr standardInterfaces::_tc_FM_DemodStatus = CORBA::TypeCode::PR_interface_tc("IDL:standardInterfaces/FM_DemodStatus:1.0", "FM_DemodStatus", &_0RL_tcTrack);
#endif

static void _0RL_standardInterfaces_mFM__ModControl_marshal_fn(cdrStream& _s, void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  omniObjRef::_marshal(_o, _s);
}
static void _0RL_standardInterfaces_mFM__ModControl_unmarshal_fn(cdrStream& _s, void*& _v)
{
  omniObjRef* _o = omniObjRef::_unMarshal(standardInterfaces::FM_ModControl::_PD_repoId, _s);
  _v = _o;
}
static void _0RL_standardInterfaces_mFM__ModControl_destructor_fn(void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  if (_o)
    omni::releaseObjRef(_o);
}

void operator<<=(::CORBA::Any& _a, standardInterfaces::FM_ModControl_ptr _o)
{
  standardInterfaces::FM_ModControl_ptr _no = standardInterfaces::FM_ModControl::_duplicate(_o);
  _a.PR_insert(standardInterfaces::_tc_FM_ModControl,
               _0RL_standardInterfaces_mFM__ModControl_marshal_fn,
               _0RL_standardInterfaces_mFM__ModControl_destructor_fn,
               _no->_PR_getobj());
}
void operator<<=(::CORBA::Any& _a, standardInterfaces::FM_ModControl_ptr* _op)
{
  _a.PR_insert(standardInterfaces::_tc_FM_ModControl,
               _0RL_standardInterfaces_mFM__ModControl_marshal_fn,
               _0RL_standardInterfaces_mFM__ModControl_destructor_fn,
               (*_op)->_PR_getobj());
  *_op = standardInterfaces::FM_ModControl::_nil();
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, standardInterfaces::FM_ModControl_ptr& _o)
{
  void* _v;
  if (_a.PR_extract(standardInterfaces::_tc_FM_ModControl,
                    _0RL_standardInterfaces_mFM__ModControl_unmarshal_fn,
                    _0RL_standardInterfaces_mFM__ModControl_marshal_fn,
                    _0RL_standardInterfaces_mFM__ModControl_destructor_fn,
                    _v)) {
    omniObjRef* _r = (omniObjRef*)_v;
    if (_r)
      _o = (standardInterfaces::FM_ModControl_ptr)_r->_ptrToObjRef(standardInterfaces::FM_ModControl::_PD_repoId);
    else
      _o = standardInterfaces::FM_ModControl::_nil();
    return 1;
  }
  return 0;
}

static void _0RL_standardInterfaces_mFM__DemodControl_marshal_fn(cdrStream& _s, void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  omniObjRef::_marshal(_o, _s);
}
static void _0RL_standardInterfaces_mFM__DemodControl_unmarshal_fn(cdrStream& _s, void*& _v)
{
  omniObjRef* _o = omniObjRef::_unMarshal(standardInterfaces::FM_DemodControl::_PD_repoId, _s);
  _v = _o;
}
static void _0RL_standardInterfaces_mFM__DemodControl_destructor_fn(void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  if (_o)
    omni::releaseObjRef(_o);
}

void operator<<=(::CORBA::Any& _a, standardInterfaces::FM_DemodControl_ptr _o)
{
  standardInterfaces::FM_DemodControl_ptr _no = standardInterfaces::FM_DemodControl::_duplicate(_o);
  _a.PR_insert(standardInterfaces::_tc_FM_DemodControl,
               _0RL_standardInterfaces_mFM__DemodControl_marshal_fn,
               _0RL_standardInterfaces_mFM__DemodControl_destructor_fn,
               _no->_PR_getobj());
}
void operator<<=(::CORBA::Any& _a, standardInterfaces::FM_DemodControl_ptr* _op)
{
  _a.PR_insert(standardInterfaces::_tc_FM_DemodControl,
               _0RL_standardInterfaces_mFM__DemodControl_marshal_fn,
               _0RL_standardInterfaces_mFM__DemodControl_destructor_fn,
               (*_op)->_PR_getobj());
  *_op = standardInterfaces::FM_DemodControl::_nil();
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, standardInterfaces::FM_DemodControl_ptr& _o)
{
  void* _v;
  if (_a.PR_extract(standardInterfaces::_tc_FM_DemodControl,
                    _0RL_standardInterfaces_mFM__DemodControl_unmarshal_fn,
                    _0RL_standardInterfaces_mFM__DemodControl_marshal_fn,
                    _0RL_standardInterfaces_mFM__DemodControl_destructor_fn,
                    _v)) {
    omniObjRef* _r = (omniObjRef*)_v;
    if (_r)
      _o = (standardInterfaces::FM_DemodControl_ptr)_r->_ptrToObjRef(standardInterfaces::FM_DemodControl::_PD_repoId);
    else
      _o = standardInterfaces::FM_DemodControl::_nil();
    return 1;
  }
  return 0;
}

static void _0RL_standardInterfaces_mFM__DemodStatus_marshal_fn(cdrStream& _s, void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  omniObjRef::_marshal(_o, _s);
}
static void _0RL_standardInterfaces_mFM__DemodStatus_unmarshal_fn(cdrStream& _s, void*& _v)
{
  omniObjRef* _o = omniObjRef::_unMarshal(standardInterfaces::FM_DemodStatus::_PD_repoId, _s);
  _v = _o;
}
static void _0RL_standardInterfaces_mFM__DemodStatus_destructor_fn(void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  if (_o)
    omni::releaseObjRef(_o);
}

void operator<<=(::CORBA::Any& _a, standardInterfaces::FM_DemodStatus_ptr _o)
{
  standardInterfaces::FM_DemodStatus_ptr _no = standardInterfaces::FM_DemodStatus::_duplicate(_o);
  _a.PR_insert(standardInterfaces::_tc_FM_DemodStatus,
               _0RL_standardInterfaces_mFM__DemodStatus_marshal_fn,
               _0RL_standardInterfaces_mFM__DemodStatus_destructor_fn,
               _no->_PR_getobj());
}
void operator<<=(::CORBA::Any& _a, standardInterfaces::FM_DemodStatus_ptr* _op)
{
  _a.PR_insert(standardInterfaces::_tc_FM_DemodStatus,
               _0RL_standardInterfaces_mFM__DemodStatus_marshal_fn,
               _0RL_standardInterfaces_mFM__DemodStatus_destructor_fn,
               (*_op)->_PR_getobj());
  *_op = standardInterfaces::FM_DemodStatus::_nil();
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, standardInterfaces::FM_DemodStatus_ptr& _o)
{
  void* _v;
  if (_a.PR_extract(standardInterfaces::_tc_FM_DemodStatus,
                    _0RL_standardInterfaces_mFM__DemodStatus_unmarshal_fn,
                    _0RL_standardInterfaces_mFM__DemodStatus_marshal_fn,
                    _0RL_standardInterfaces_mFM__DemodStatus_destructor_fn,
                    _v)) {
    omniObjRef* _r = (omniObjRef*)_v;
    if (_r)
      _o = (standardInterfaces::FM_DemodStatus_ptr)_r->_ptrToObjRef(standardInterfaces::FM_DemodStatus::_PD_repoId);
    else
      _o = standardInterfaces::FM_DemodStatus::_nil();
    return 1;
  }
  return 0;
}

